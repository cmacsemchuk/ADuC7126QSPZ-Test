


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for ADI ADuC712x device seri
                       es                    */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2006 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   20 00000000         ; *  from on-chip Flash to on-chip RAM and remaps RAM to
                        address 0.
   21 00000000         ; */
   22 00000000         
   23 00000000         
   24 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   25 00000000         
   26 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   27 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   28 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   29 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   30 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   31 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B



ARM Macro Assembler    Page 2 


   32 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   33 00000000         
   34 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   35 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   36 00000000         
   37 00000000         
   38 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   39 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   40 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   41 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   42 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   43 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   44 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   45 00000000         ;// </h>
   46 00000000         
   47 00000000 00000080 
                       UND_Stack_Size
                               EQU              0x00000080
   48 00000000 00000080 
                       SVC_Stack_Size
                               EQU              0x00000080
   49 00000000 00000080 
                       ABT_Stack_Size
                               EQU              0x00000080
   50 00000000 00000080 
                       FIQ_Stack_Size
                               EQU              0x00000080
   51 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   52 00000000 00000600 
                       USR_Stack_Size
                               EQU              0x00000600
   53 00000000         
   55 00000000 00000280 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   56 00000000         
   57 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   58 00000000         
   59 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   60 00000600         __initial_sp
                               SPACE            ISR_Stack_Size
   61 00000880         Stack_Top
   62 00000880         
   63 00000880         
   64 00000880         ;// <h> Heap Configuration
   65 00000880         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   66 00000880         ;// </h>



ARM Macro Assembler    Page 3 


   67 00000880         
   68 00000880 00000000 
                       Heap_Size
                               EQU              0x00000000
   69 00000880         
   70 00000880                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   71 00000000         __heap_base
   72 00000000         Heap_Mem
                               SPACE            Heap_Size
   73 00000000         __heap_limit
   74 00000000         
   75 00000000         ; MMR definitions
   76 00000000 FFFF0000 
                       MMR_BASE
                               EQU              0xFFFF0000  ; MMR Base Address
   77 00000000 00000220 
                       REMAP_OFFSET
                               EQU              0x0220
   78 00000000         
   79 00000000         
   80 00000000                 PRESERVE8
   81 00000000         
   82 00000000         
   83 00000000         ; Area Definition and Entry Point
   84 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   85 00000000         
   86 00000000                 AREA             RESET, CODE, READONLY
   87 00000000                 ARM
   88 00000000         
   89 00000000         
   90 00000000         ; Exception Vectors
   91 00000000         ;  Mapped to Address 0.
   92 00000000         ;  Absolute addressing mode must be used.
   93 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   94 00000000         
   95 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
   96 00000004 E59FF018        LDR              PC, Undef_Addr
   97 00000008 E59FF018        LDR              PC, SWI_Addr
   98 0000000C E59FF018        LDR              PC, PAbt_Addr
   99 00000010 E59FF018        LDR              PC, DAbt_Addr
  100 00000014 E1A00000        NOP                          ; Reserved Vector 
  101 00000018 E59FF018        LDR              PC, IRQ_Addr
  102 0000001C E59FF018        LDR              PC, FIQ_Addr
  103 00000020         
  104 00000020                 IMPORT           IRQ_Handler
  105 00000020         
  106 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  107 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  108 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler



ARM Macro Assembler    Page 4 


  109 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  110 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  111 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  112 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  113 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  114 00000040         
  115 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  116 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  117 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  118 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  119 00000050         ;IRQ_Handler    B       IRQ_Handler            ; in IRQ.
                       c
  120 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  121 00000054         
  122 00000054         ; Reset Handler
  123 00000054         
  124 00000054                 EXPORT           Reset_Handler
  125 00000054         Reset_Handler
  126 00000054         
  127 00000054         
  128 00000054         ; Copy Exception Vectors to Internal RAM and Remap Memor
                       y
  129 00000054         ;  (when Interrupt Vectors are in RAM)
  130 00000054         
  131 00000054                 IF               :DEF:RAM_INTVEC
  141                          ENDIF
  142 00000054         
  143 00000054         
  144 00000054         ; Setup Stack for each mode
  145 00000054         
  146 00000054 E59F004C        LDR              R0, =Stack_Top
  147 00000058         
  148 00000058         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  149 00000058 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  150 0000005C E1A0D000        MOV              SP, R0
  151 00000060 E2400080        SUB              R0, R0, #UND_Stack_Size
  152 00000064         
  153 00000064         ;  Enter Abort Mode and set its Stack Pointer



ARM Macro Assembler    Page 5 


  154 00000064 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  155 00000068 E1A0D000        MOV              SP, R0
  156 0000006C E2400080        SUB              R0, R0, #ABT_Stack_Size
  157 00000070         
  158 00000070         ;  Enter FIQ Mode and set its Stack Pointer
  159 00000070 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  160 00000074 E1A0D000        MOV              SP, R0
  161 00000078 E2400080        SUB              R0, R0, #FIQ_Stack_Size
  162 0000007C         
  163 0000007C         ;  Enter IRQ Mode and set its Stack Pointer
  164 0000007C E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  165 00000080 E1A0D000        MOV              SP, R0
  166 00000084 E2400080        SUB              R0, R0, #IRQ_Stack_Size
  167 00000088         
  168 00000088         ;  Enter Supervisor Mode and set its Stack Pointer
  169 00000088 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  170 0000008C E1A0D000        MOV              SP, R0
  171 00000090 E2400080        SUB              R0, R0, #SVC_Stack_Size
  172 00000094         
  173 00000094         ;  Enter User Mode and set its Stack Pointer
  174 00000094 E321F010        MSR              CPSR_c, #Mode_USR
  175 00000098                 IF               :DEF:__MICROLIB
  180 00000098         
  181 00000098 E1A0D000        MOV              SP, R0
  182 0000009C E24DAC06        SUB              SL, SP, #USR_Stack_Size
  183 000000A0         
  184 000000A0                 ENDIF
  185 000000A0         
  186 000000A0         
  187 000000A0         ; Enter the C code
  188 000000A0         
  189 000000A0                 IMPORT           __main
  190 000000A0 E59F0004        LDR              R0, =__main
  191 000000A4 E12FFF10        BX               R0
  192 000000A8         
  193 000000A8         
  194 000000A8                 IF               :DEF:__MICROLIB
  200 000000A8         ; User Initial Stack & Heap
  201 000000A8 00000000 
              00000000         AREA             |.text|, CODE, READONLY
  202 00000000         
  203 00000000                 IMPORT           __use_two_region_memory
  204 00000000                 EXPORT           __user_initial_stackheap
  205 00000000         __user_initial_stackheap
  206 00000000         
  207 00000000 E59F000C        LDR              R0, =  Heap_Mem
  208 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  209 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  210 0000000C E59F3008        LDR              R3, = Stack_Mem
  211 00000010 E12FFF1E        BX               LR
  212 00000014                 ENDIF
  213 00000014         
  214 00000014         



ARM Macro Assembler    Page 6 


  215 00000014                 END
              00000000 
              00000600 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
duc712x.d -o.\aduc712x.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Inclu
de -IC:\Keil_v5\ARM\INC\ADI --predefine="__EVAL SETA 1" --predefine="__UVISION_
VERSION SETA 527" --list=.\aduc712x.lst ADuC712x.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 57 in file ADuC712x.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 59 in file ADuC712x.s
   Uses
      At line 208 in file ADuC712x.s
      At line 210 in file ADuC712x.s

Stack_Top 00000880

Symbol: Stack_Top
   Definitions
      At line 61 in file ADuC712x.s
   Uses
      At line 146 in file ADuC712x.s
Comment: Stack_Top used once
__initial_sp 00000600

Symbol: __initial_sp
   Definitions
      At line 60 in file ADuC712x.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 70 in file ADuC712x.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 72 in file ADuC712x.s
   Uses
      At line 207 in file ADuC712x.s
      At line 209 in file ADuC712x.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 71 in file ADuC712x.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 73 in file ADuC712x.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 110 in file ADuC712x.s
   Uses
      At line 99 in file ADuC712x.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 118 in file ADuC712x.s
   Uses
      At line 110 in file ADuC712x.s
      At line 118 in file ADuC712x.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 113 in file ADuC712x.s
   Uses
      At line 102 in file ADuC712x.s
Comment: FIQ_Addr used once
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 120 in file ADuC712x.s
   Uses
      At line 113 in file ADuC712x.s
      At line 120 in file ADuC712x.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 112 in file ADuC712x.s
   Uses
      At line 101 in file ADuC712x.s
Comment: IRQ_Addr used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 109 in file ADuC712x.s
   Uses
      At line 98 in file ADuC712x.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 117 in file ADuC712x.s
   Uses
      At line 109 in file ADuC712x.s
      At line 117 in file ADuC712x.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 86 in file ADuC712x.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 106 in file ADuC712x.s
   Uses
      At line 95 in file ADuC712x.s
Comment: Reset_Addr used once
Reset_Handler 00000054

Symbol: Reset_Handler
   Definitions
      At line 125 in file ADuC712x.s
   Uses
      At line 106 in file ADuC712x.s
      At line 124 in file ADuC712x.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 108 in file ADuC712x.s
   Uses
      At line 97 in file ADuC712x.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 116 in file ADuC712x.s
   Uses
      At line 108 in file ADuC712x.s
      At line 116 in file ADuC712x.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 107 in file ADuC712x.s
   Uses
      At line 96 in file ADuC712x.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 115 in file ADuC712x.s
   Uses
      At line 107 in file ADuC712x.s
      At line 115 in file ADuC712x.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 95 in file ADuC712x.s
   Uses
      None
Comment: Vectors unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 201 in file ADuC712x.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 205 in file ADuC712x.s
   Uses
      At line 204 in file ADuC712x.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000080

Symbol: ABT_Stack_Size
   Definitions
      At line 49 in file ADuC712x.s
   Uses
      At line 55 in file ADuC712x.s
      At line 156 in file ADuC712x.s

FIQ_Stack_Size 00000080

Symbol: FIQ_Stack_Size
   Definitions
      At line 50 in file ADuC712x.s
   Uses
      At line 55 in file ADuC712x.s
      At line 161 in file ADuC712x.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 35 in file ADuC712x.s
   Uses
      At line 149 in file ADuC712x.s
      At line 154 in file ADuC712x.s
      At line 159 in file ADuC712x.s
      At line 164 in file ADuC712x.s
      At line 169 in file ADuC712x.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 68 in file ADuC712x.s
   Uses
      At line 72 in file ADuC712x.s
      At line 209 in file ADuC712x.s

IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 51 in file ADuC712x.s
   Uses
      At line 55 in file ADuC712x.s
      At line 166 in file ADuC712x.s

ISR_Stack_Size 00000280

Symbol: ISR_Stack_Size
   Definitions
      At line 55 in file ADuC712x.s
   Uses
      At line 60 in file ADuC712x.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 34 in file ADuC712x.s
   Uses
      At line 149 in file ADuC712x.s
      At line 154 in file ADuC712x.s
      At line 159 in file ADuC712x.s
      At line 164 in file ADuC712x.s
      At line 169 in file ADuC712x.s

MMR_BASE FFFF0000

Symbol: MMR_BASE
   Definitions
      At line 76 in file ADuC712x.s
   Uses
      None
Comment: MMR_BASE unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 30 in file ADuC712x.s
   Uses
      At line 154 in file ADuC712x.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 27 in file ADuC712x.s
   Uses
      At line 159 in file ADuC712x.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 28 in file ADuC712x.s
   Uses
      At line 164 in file ADuC712x.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 29 in file ADuC712x.s
   Uses
      At line 169 in file ADuC712x.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 32 in file ADuC712x.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: Mode_UND
   Definitions
      At line 31 in file ADuC712x.s
   Uses
      At line 149 in file ADuC712x.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 26 in file ADuC712x.s
   Uses
      At line 174 in file ADuC712x.s
Comment: Mode_USR used once
REMAP_OFFSET 00000220

Symbol: REMAP_OFFSET
   Definitions
      At line 77 in file ADuC712x.s
   Uses
      None
Comment: REMAP_OFFSET unused
SVC_Stack_Size 00000080

Symbol: SVC_Stack_Size
   Definitions
      At line 48 in file ADuC712x.s
   Uses
      At line 55 in file ADuC712x.s
      At line 171 in file ADuC712x.s

UND_Stack_Size 00000080

Symbol: UND_Stack_Size
   Definitions
      At line 47 in file ADuC712x.s
   Uses
      At line 55 in file ADuC712x.s
      At line 151 in file ADuC712x.s

USR_Stack_Size 00000600

Symbol: USR_Stack_Size
   Definitions
      At line 52 in file ADuC712x.s
   Uses
      At line 59 in file ADuC712x.s
      At line 182 in file ADuC712x.s
      At line 208 in file ADuC712x.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

IRQ_Handler 00000000

Symbol: IRQ_Handler
   Definitions
      At line 104 in file ADuC712x.s
   Uses
      At line 112 in file ADuC712x.s
Comment: IRQ_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 189 in file ADuC712x.s
   Uses
      At line 190 in file ADuC712x.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 203 in file ADuC712x.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
389 symbols in table
